# Generated by Django 4.1.5 on 2024-05-22 09:59

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('make', models.CharField(max_length=40)),
                ('model', models.CharField(max_length=40)),
                ('additional_model_details', models.CharField(max_length=80)),
                ('odometer', models.IntegerField(default=0)),
                ('rental_or_loan', models.BooleanField(default=False)),
                ('licence_plate', models.CharField(max_length=40)),
                ('nickname', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='ElectricVehicle',
            fields=[
                ('vehicle_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rff_csb_project_one.vehicle')),
                ('capacity_kwh', models.FloatField(default=45, validators=[django.core.validators.MinValueValidator(1)])),
                ('charge_level', models.IntegerField(default=50, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
            ],
            bases=('rff_csb_project_one.vehicle',),
        ),
        migrations.CreateModel(
            name='FlexFuelVehicle',
            fields=[
                ('vehicle_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rff_csb_project_one.vehicle')),
            ],
            bases=('rff_csb_project_one.vehicle',),
        ),
        migrations.CreateModel(
            name='FuelVehicle',
            fields=[
                ('vehicle_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rff_csb_project_one.vehicle')),
                ('fuel_type', models.CharField(choices=[('D', 'Diesel'), ('E', 'Ethanol'), ('B', 'Gasoline')], default='B', max_length=1)),
            ],
            bases=('rff_csb_project_one.vehicle',),
        ),
        migrations.CreateModel(
            name='GasVehicle',
            fields=[
                ('vehicle_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rff_csb_project_one.vehicle')),
                ('capacity_kg', models.FloatField(default=5, validators=[django.core.validators.MinValueValidator(1)])),
                ('gas_level_kg', models.FloatField(default=2.5, validators=[django.core.validators.MinValueValidator(0)])),
            ],
            bases=('rff_csb_project_one.vehicle',),
        ),
        migrations.CreateModel(
            name='MidHybridVehicle',
            fields=[
                ('vehicle_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rff_csb_project_one.vehicle')),
                ('fuel_type', models.CharField(choices=[('D', 'Diesel'), ('B', 'Gasoline')], default='B', max_length=1)),
            ],
            bases=('rff_csb_project_one.vehicle',),
        ),
        migrations.CreateModel(
            name='PluginHybridVehicle',
            fields=[
                ('vehicle_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rff_csb_project_one.vehicle')),
                ('fuel_type', models.CharField(choices=[('D', 'Diesel'), ('B', 'Gasoline')], default='B', max_length=1)),
            ],
            bases=('rff_csb_project_one.vehicle',),
        ),
        migrations.CreateModel(
            name='Refill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('price', models.FloatField(default=1, validators=[django.core.validators.MinValueValidator(0)])),
                ('type_of_refill', models.CharField(choices=[('D', 'Diesel'), ('E', 'Ethanol'), ('B', 'Gasoline'), ('CNG', 'Compressed Natural Gas'), ('CBG', 'Compressed Bio Gas')], default='B', max_length=3)),
                ('odometer_reading', models.IntegerField(default=0)),
                ('distance', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rff_csb_project_one.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='Recharge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_charged_to', models.IntegerField(default=50, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('price', models.FloatField(default=1, validators=[django.core.validators.MinValueValidator(0)])),
                ('odometer_reading', models.IntegerField(default=0)),
                ('distance', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rff_csb_project_one.vehicle')),
            ],
        ),
    ]
